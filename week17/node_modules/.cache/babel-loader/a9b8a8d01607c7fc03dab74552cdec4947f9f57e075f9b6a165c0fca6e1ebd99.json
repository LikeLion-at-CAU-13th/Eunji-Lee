{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst useCartStore = create(persist((set, get) => ({\n  cartItems: [],\n  discount: 0,\n  loading: false,\n  addItem: product => {\n    set(state => {\n      const existingItem = state.cartItems.find(item => item.name === product.name && item.price === product.price);\n      if (existingItem) {\n        return {\n          cartItems: state.cartItems.map(item => item.name === product.name && item.price === product.price ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item)\n        };\n      }\n      return {\n        cartItems: [...state.cartItems, {\n          ...product,\n          id: Date.now(),\n          quantity: 1,\n          checked: true\n        }]\n      };\n    });\n  },\n  removeItem: id => set(state => ({\n    cartItems: state.cartItems.filter(item => item.id !== id)\n  })),\n  updateQuantity: (id, quantity) => set(state => ({\n    cartItems: state.cartItems.map(item => item.id === id ? {\n      ...item,\n      quantity: Math.max(1, quantity)\n    } : item)\n  })),\n  toggleItemChecked: id => set(state => ({\n    cartItems: state.cartItems.map(item => item.id === id ? {\n      ...item,\n      checked: !item.checked\n    } : item)\n  })),\n  toggleAllChecked: () => set(state => {\n    const allChecked = state.cartItems.every(item => item.checked);\n    return {\n      cartItems: state.cartItems.map(item => ({\n        ...item,\n        checked: !allChecked\n      }))\n    };\n  }),\n  areAllChecked: () => get().cartItems.every(item => item.checked),\n  applyDiscount: async code => {\n    set(state => ({\n      ...state,\n      loading: true\n    }));\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const discountMap = {\n      'XAERINOO': 0.1,\n      'ILOVECAU': 0.5\n    };\n    const discount = discountMap[code.toUpperCase()] || 0;\n    if (!discount) alert('유효하지 않은 할인 코드입니다!');\n    set(state => ({\n      ...state,\n      discount,\n      loading: false\n    }));\n  },\n  getOriginalTotalPrice: () => get().cartItems.reduce((total, item) => item.checked ? total + (item.price || 0) * (item.quantity || 1) : total, 0),\n  getTotalPrice: () => {\n    const total = get().cartItems.reduce((total, item) => item.checked ? total + item.price * item.quantity : total, 0);\n    return total * (1 - get().discount);\n  }\n}), {\n  name: 'cart-storage'\n}));\nexport default useCartStore;","map":{"version":3,"names":["create","persist","useCartStore","set","get","cartItems","discount","loading","addItem","product","state","existingItem","find","item","name","price","map","quantity","id","Date","now","checked","removeItem","filter","updateQuantity","Math","max","toggleItemChecked","toggleAllChecked","allChecked","every","areAllChecked","applyDiscount","code","Promise","resolve","setTimeout","discountMap","toUpperCase","alert","getOriginalTotalPrice","reduce","total","getTotalPrice"],"sources":["/Users/eunji/Desktop/Likelion13th-git/week17/src/stores/cartStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nconst useCartStore = create(\n    persist(\n        (set, get) => ({\n            cartItems: [],\n            discount: 0,\n            loading: false,\n\n            addItem: (product) => {\n                set((state) => {\n                    const existingItem = state.cartItems.find(\n                        (item) => item.name === product.name && item.price === product.price\n                    )\n                    if (existingItem) {\n                        return {\n                            cartItems: state.cartItems.map((item) => \n                            item.name === product.name && item.price === product.price\n                        ? { ...item, quantity: item.quantity + 1} : item),\n                        }\n                    }\n                    return{\n                        cartItems: [...state.cartItems, { ...product, id: Date.now(), quantity: 1, checked: true}],\n                    }\n                })\n            },\n\n            removeItem: (id) =>\n                set((state) => ({\n                    cartItems: state.cartItems.filter((item) => item.id !== id),\n                })),\n            \n            updateQuantity: (id, quantity) =>\n                set((state) => ({\n                    cartItems: state.cartItems.map((item) =>\n                    item.id === id ? { ...item, quantity: Math.max(1, quantity)} : item),\n                })),\n            \n            toggleItemChecked: (id) =>\n                set((state) => ({\n                    cartItems: state.cartItems.map((item) =>\n                    item.id === id ? { ...item, checked: !item.checked } : item ),\n                })),\n\n            toggleAllChecked: () =>\n                set((state) => {\n                    const allChecked = state.cartItems.every((item) => item.checked);\n                    return {\n                        cartItems: state.cartItems.map((item) => ({\n                            ...item, checked: !allChecked,\n                        })),\n                    };\n                }),\n\n            areAllChecked: () =>\n                get().cartItems.every((item) => item.checked),\n\n            applyDiscount: async (code) => {\n                set((state) => ({ ...state, loading: true}));\n                await new Promise((resolve) => setTimeout(resolve, 1000));\n                const discountMap = {\n                    'XAERINOO': 0.1,\n                    'ILOVECAU': 0.5,\n                };\n                const discount = discountMap[code.toUpperCase()] || 0;\n                if (!discount) alert('유효하지 않은 할인 코드입니다!');\n                set((state) => ({ ...state, discount, loading: false}));\n            },\n\n            getOriginalTotalPrice: () =>\n                get().cartItems.reduce(\n                    (total, item) => \n                        item.checked ? total + ((item.price || 0)) * (item.quantity || 1) : total, 0\n                ),\n\n            getTotalPrice: () => {\n                const total = get().cartItems.reduce(\n                    (total, item) => \n                        item.checked ? total + item.price * item.quantity : total, 0,\n                );\n                return total * (1 - get().discount)\n            },\n\n        }),\n        { name: 'cart-storage', }\n    )\n)\n\nexport default useCartStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,YAAY,GAAGF,MAAM,CACvBC,OAAO,CACH,CAACE,GAAG,EAAEC,GAAG,MAAM;EACXC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,CAAC;EACXC,OAAO,EAAE,KAAK;EAEdC,OAAO,EAAGC,OAAO,IAAK;IAClBN,GAAG,CAAEO,KAAK,IAAK;MACX,MAAMC,YAAY,GAAGD,KAAK,CAACL,SAAS,CAACO,IAAI,CACpCC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKL,OAAO,CAACK,IAAI,IAAID,IAAI,CAACE,KAAK,KAAKN,OAAO,CAACM,KACnE,CAAC;MACD,IAAIJ,YAAY,EAAE;QACd,OAAO;UACHN,SAAS,EAAEK,KAAK,CAACL,SAAS,CAACW,GAAG,CAAEH,IAAI,IACpCA,IAAI,CAACC,IAAI,KAAKL,OAAO,CAACK,IAAI,IAAID,IAAI,CAACE,KAAK,KAAKN,OAAO,CAACM,KAAK,GAC5D;YAAE,GAAGF,IAAI;YAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;UAAC,CAAC,GAAGJ,IAAI;QAChD,CAAC;MACL;MACA,OAAM;QACFR,SAAS,EAAE,CAAC,GAAGK,KAAK,CAACL,SAAS,EAAE;UAAE,GAAGI,OAAO;UAAES,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEH,QAAQ,EAAE,CAAC;UAAEI,OAAO,EAAE;QAAI,CAAC;MAC7F,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAEDC,UAAU,EAAGJ,EAAE,IACXf,GAAG,CAAEO,KAAK,KAAM;IACZL,SAAS,EAAEK,KAAK,CAACL,SAAS,CAACkB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKA,EAAE;EAC9D,CAAC,CAAC,CAAC;EAEPM,cAAc,EAAEA,CAACN,EAAE,EAAED,QAAQ,KACzBd,GAAG,CAAEO,KAAK,KAAM;IACZL,SAAS,EAAEK,KAAK,CAACL,SAAS,CAACW,GAAG,CAAEH,IAAI,IACpCA,IAAI,CAACK,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGL,IAAI;MAAEI,QAAQ,EAAEQ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAET,QAAQ;IAAC,CAAC,GAAGJ,IAAI;EACvE,CAAC,CAAC,CAAC;EAEPc,iBAAiB,EAAGT,EAAE,IAClBf,GAAG,CAAEO,KAAK,KAAM;IACZL,SAAS,EAAEK,KAAK,CAACL,SAAS,CAACW,GAAG,CAAEH,IAAI,IACpCA,IAAI,CAACK,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGL,IAAI;MAAEQ,OAAO,EAAE,CAACR,IAAI,CAACQ;IAAQ,CAAC,GAAGR,IAAK;EAChE,CAAC,CAAC,CAAC;EAEPe,gBAAgB,EAAEA,CAAA,KACdzB,GAAG,CAAEO,KAAK,IAAK;IACX,MAAMmB,UAAU,GAAGnB,KAAK,CAACL,SAAS,CAACyB,KAAK,CAAEjB,IAAI,IAAKA,IAAI,CAACQ,OAAO,CAAC;IAChE,OAAO;MACHhB,SAAS,EAAEK,KAAK,CAACL,SAAS,CAACW,GAAG,CAAEH,IAAI,KAAM;QACtC,GAAGA,IAAI;QAAEQ,OAAO,EAAE,CAACQ;MACvB,CAAC,CAAC;IACN,CAAC;EACL,CAAC,CAAC;EAENE,aAAa,EAAEA,CAAA,KACX3B,GAAG,CAAC,CAAC,CAACC,SAAS,CAACyB,KAAK,CAAEjB,IAAI,IAAKA,IAAI,CAACQ,OAAO,CAAC;EAEjDW,aAAa,EAAE,MAAOC,IAAI,IAAK;IAC3B9B,GAAG,CAAEO,KAAK,KAAM;MAAE,GAAGA,KAAK;MAAEH,OAAO,EAAE;IAAI,CAAC,CAAC,CAAC;IAC5C,MAAM,IAAI2B,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IACzD,MAAME,WAAW,GAAG;MAChB,UAAU,EAAE,GAAG;MACf,UAAU,EAAE;IAChB,CAAC;IACD,MAAM/B,QAAQ,GAAG+B,WAAW,CAACJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;IACrD,IAAI,CAAChC,QAAQ,EAAEiC,KAAK,CAAC,mBAAmB,CAAC;IACzCpC,GAAG,CAAEO,KAAK,KAAM;MAAE,GAAGA,KAAK;MAAEJ,QAAQ;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC,CAAC;EAC3D,CAAC;EAEDiC,qBAAqB,EAAEA,CAAA,KACnBpC,GAAG,CAAC,CAAC,CAACC,SAAS,CAACoC,MAAM,CAClB,CAACC,KAAK,EAAE7B,IAAI,KACRA,IAAI,CAACQ,OAAO,GAAGqB,KAAK,GAAG,CAAE7B,IAAI,CAACE,KAAK,IAAI,CAAC,KAAMF,IAAI,CAACI,QAAQ,IAAI,CAAC,CAAC,GAAGyB,KAAK,EAAE,CACnF,CAAC;EAELC,aAAa,EAAEA,CAAA,KAAM;IACjB,MAAMD,KAAK,GAAGtC,GAAG,CAAC,CAAC,CAACC,SAAS,CAACoC,MAAM,CAChC,CAACC,KAAK,EAAE7B,IAAI,KACRA,IAAI,CAACQ,OAAO,GAAGqB,KAAK,GAAG7B,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACI,QAAQ,GAAGyB,KAAK,EAAE,CACnE,CAAC;IACD,OAAOA,KAAK,IAAI,CAAC,GAAGtC,GAAG,CAAC,CAAC,CAACE,QAAQ,CAAC;EACvC;AAEJ,CAAC,CAAC,EACF;EAAEQ,IAAI,EAAE;AAAgB,CAC5B,CACJ,CAAC;AAED,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}